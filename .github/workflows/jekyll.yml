# 此工作流程使用未经 GitHub 认证的操作。
#它们由第三方提供并受
# 单独的服务条款、隐私政策和支持
# 文档。

# 构建 Jekyll 站点并将其部署到 GitHub Pages 的示例工作流程
名称：将 Jekyll 站点部署到 Pages

on:
  # 在针对默认分支的推送上运行# Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # 允许您从“操作”选项卡手动运行此工作流程# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents:   内容： 阅读
  pages:   页数：写
  id-token:   id 令牌：写入

# 仅允许一项并发部署，跳过正在进行的运行和最新排队的运行之间的排队运行。
#但是，不要取消发射的运行，因为我们希望完成这些生产部署。
系数：
  组：“页面”
  取消进行中：false

职位：
  # 构建作业
  建造：
    running-on :     运行：ubuntu-latest
    步骤：
      -名称:       - 名称：结账
        使用：         使用：actions/checkout@v4
      -姓名：       - 名称：安装 Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
